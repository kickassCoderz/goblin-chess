.root {
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.board {
    margin: 0 auto;
    display: grid;
    grid-gap: 0;
    grid-template-columns: repeat(8, 70px);
    grid-template-rows: 40px repeat(8, 70px) 40px;
    grid-auto-flow: row;
}

.boardInner {
    display: grid;
    grid-gap: 0;
    grid-template-columns: repeat(8, auto);
    grid-template-rows: auto;
    grid-auto-flow: row;
    align-items: strech;
}

.square {
    padding: 20px;
    font-size: 150%;
    background-color: #32a852;
    color: #000;
    text-align: center;
    font-weight: bold;
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
}

.squareWhite {
    color: #ffffff;
}

.squareBlack {
    color: #000000;
}

.squareInner {
    text-align: center;
    align-self: center;
}

.squareSelected {
    border: 1px solid #ff0000;
}

.squareOption {
    background-color: #d6aca9 !important;
}

.boardTop,
.boardBottom {
    display: grid;
    align-items: stretch;
    background-color: #4b9660;
}

.boardTop {
    grid-column-start: 1;
    grid-column-end: 9;
    grid-row-start: 1;
    grid-row-end: 1;
}

.boardBottom {
    grid-column-start: 1;
    grid-column-end: 9;
    grid-row-start: 10;
    grid-row-end: 10;
}

.square:nth-child(-2n+9),
.square:nth-child(9)~div:nth-child(-2n+16),
.square:nth-child(17)~div:nth-child(-2n+25),
.square:nth-child(25)~div:nth-child(-2n+32),
.square:nth-child(33)~div:nth-child(-2n+41),
.square:nth-child(41)~div:nth-child(-2n+48),
.square:nth-child(49)~div:nth-child(-2n+57),
.square:nth-child(57)~div:nth-child(-2n+64) {
    background-color: #085c1f;
}

.fight {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

.fight h2 {
    margin: 0;
}

.fightMoves {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 20px;
}

.fightMove {
    padding: 20px;
    box-sizing: border-box;
    background-color: #085c1f;
    font-weight: bold;
    cursor: pointer;
}

@keyframes pawnIdleAnimation {
    0% {
      transform:rotate(0deg);
      transform-origin: bottom;
    }
    50% {
       transform:rotate(6deg);
       transform-origin: bottom;
    }
    100% {
      transform: rotate(0deg);
      transform-origin: bottom;
    }
  }

.pieceImage {
    width: 70px;
    height: 70px;
}

.pieceImage.pieceState-Ready {
    animation: pawnIdleAnimation 1s infinite linear alternate;
}

.squareWhite .pieceImage {
    filter: hue-rotate(0deg);
}

.squareBlack .pieceImage {
    filter: hue-rotate(260deg);
}
